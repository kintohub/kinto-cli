// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cluster.proto

package types

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Public API info related to a cluster
type PublicClusterInfo struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName          string               `protobuf:"bytes,2,opt,name=displayName,proto3" json:"displayName,omitempty"`
	HostName             string               `protobuf:"bytes,3,opt,name=hostName,proto3" json:"hostName,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	WebHostName          string               `protobuf:"bytes,6,opt,name=webHostName,proto3" json:"webHostName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PublicClusterInfo) Reset()         { *m = PublicClusterInfo{} }
func (m *PublicClusterInfo) String() string { return proto.CompactTextString(m) }
func (*PublicClusterInfo) ProtoMessage()    {}
func (*PublicClusterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{0}
}

func (m *PublicClusterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicClusterInfo.Unmarshal(m, b)
}
func (m *PublicClusterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicClusterInfo.Marshal(b, m, deterministic)
}
func (m *PublicClusterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicClusterInfo.Merge(m, src)
}
func (m *PublicClusterInfo) XXX_Size() int {
	return xxx_messageInfo_PublicClusterInfo.Size(m)
}
func (m *PublicClusterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicClusterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PublicClusterInfo proto.InternalMessageInfo

func (m *PublicClusterInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PublicClusterInfo) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *PublicClusterInfo) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *PublicClusterInfo) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PublicClusterInfo) GetWebHostName() string {
	if m != nil {
		return m.WebHostName
	}
	return ""
}

type ClustersResponse struct {
	Clusters             []*PublicClusterInfo `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ClustersResponse) Reset()         { *m = ClustersResponse{} }
func (m *ClustersResponse) String() string { return proto.CompactTextString(m) }
func (*ClustersResponse) ProtoMessage()    {}
func (*ClustersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{1}
}

func (m *ClustersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClustersResponse.Unmarshal(m, b)
}
func (m *ClustersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClustersResponse.Marshal(b, m, deterministic)
}
func (m *ClustersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClustersResponse.Merge(m, src)
}
func (m *ClustersResponse) XXX_Size() int {
	return xxx_messageInfo_ClustersResponse.Size(m)
}
func (m *ClustersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClustersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClustersResponse proto.InternalMessageInfo

func (m *ClustersResponse) GetClusters() []*PublicClusterInfo {
	if m != nil {
		return m.Clusters
	}
	return nil
}

type ClusterEnvironmentsResponse struct {
	Envs                 []*ClusterEnvironment `protobuf:"bytes,2,rep,name=envs,proto3" json:"envs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ClusterEnvironmentsResponse) Reset()         { *m = ClusterEnvironmentsResponse{} }
func (m *ClusterEnvironmentsResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterEnvironmentsResponse) ProtoMessage()    {}
func (*ClusterEnvironmentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{2}
}

func (m *ClusterEnvironmentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterEnvironmentsResponse.Unmarshal(m, b)
}
func (m *ClusterEnvironmentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterEnvironmentsResponse.Marshal(b, m, deterministic)
}
func (m *ClusterEnvironmentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterEnvironmentsResponse.Merge(m, src)
}
func (m *ClusterEnvironmentsResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterEnvironmentsResponse.Size(m)
}
func (m *ClusterEnvironmentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterEnvironmentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterEnvironmentsResponse proto.InternalMessageInfo

func (m *ClusterEnvironmentsResponse) GetEnvs() []*ClusterEnvironment {
	if m != nil {
		return m.Envs
	}
	return nil
}

type CreateAccessTokenRequest struct {
	ClusterId            string   `protobuf:"bytes,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	EnvId                string   `protobuf:"bytes,2,opt,name=envId,proto3" json:"envId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAccessTokenRequest) Reset()         { *m = CreateAccessTokenRequest{} }
func (m *CreateAccessTokenRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAccessTokenRequest) ProtoMessage()    {}
func (*CreateAccessTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{3}
}

func (m *CreateAccessTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccessTokenRequest.Unmarshal(m, b)
}
func (m *CreateAccessTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccessTokenRequest.Marshal(b, m, deterministic)
}
func (m *CreateAccessTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccessTokenRequest.Merge(m, src)
}
func (m *CreateAccessTokenRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAccessTokenRequest.Size(m)
}
func (m *CreateAccessTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccessTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccessTokenRequest proto.InternalMessageInfo

func (m *CreateAccessTokenRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *CreateAccessTokenRequest) GetEnvId() string {
	if m != nil {
		return m.EnvId
	}
	return ""
}

type CreateAccessTokenResponse struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	ClusterId            string   `protobuf:"bytes,2,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	EnvId                string   `protobuf:"bytes,3,opt,name=envId,proto3" json:"envId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAccessTokenResponse) Reset()         { *m = CreateAccessTokenResponse{} }
func (m *CreateAccessTokenResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAccessTokenResponse) ProtoMessage()    {}
func (*CreateAccessTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{4}
}

func (m *CreateAccessTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccessTokenResponse.Unmarshal(m, b)
}
func (m *CreateAccessTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccessTokenResponse.Marshal(b, m, deterministic)
}
func (m *CreateAccessTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccessTokenResponse.Merge(m, src)
}
func (m *CreateAccessTokenResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAccessTokenResponse.Size(m)
}
func (m *CreateAccessTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccessTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccessTokenResponse proto.InternalMessageInfo

func (m *CreateAccessTokenResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *CreateAccessTokenResponse) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *CreateAccessTokenResponse) GetEnvId() string {
	if m != nil {
		return m.EnvId
	}
	return ""
}

type CreateClusterEnvironmentRequest struct {
	ClusterId            string   `protobuf:"bytes,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateClusterEnvironmentRequest) Reset()         { *m = CreateClusterEnvironmentRequest{} }
func (m *CreateClusterEnvironmentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateClusterEnvironmentRequest) ProtoMessage()    {}
func (*CreateClusterEnvironmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{5}
}

func (m *CreateClusterEnvironmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterEnvironmentRequest.Unmarshal(m, b)
}
func (m *CreateClusterEnvironmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterEnvironmentRequest.Marshal(b, m, deterministic)
}
func (m *CreateClusterEnvironmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterEnvironmentRequest.Merge(m, src)
}
func (m *CreateClusterEnvironmentRequest) XXX_Size() int {
	return xxx_messageInfo_CreateClusterEnvironmentRequest.Size(m)
}
func (m *CreateClusterEnvironmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterEnvironmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterEnvironmentRequest proto.InternalMessageInfo

func (m *CreateClusterEnvironmentRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *CreateClusterEnvironmentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*PublicClusterInfo)(nil), "PublicClusterInfo")
	proto.RegisterType((*ClustersResponse)(nil), "ClustersResponse")
	proto.RegisterType((*ClusterEnvironmentsResponse)(nil), "ClusterEnvironmentsResponse")
	proto.RegisterType((*CreateAccessTokenRequest)(nil), "CreateAccessTokenRequest")
	proto.RegisterType((*CreateAccessTokenResponse)(nil), "CreateAccessTokenResponse")
	proto.RegisterType((*CreateClusterEnvironmentRequest)(nil), "CreateClusterEnvironmentRequest")
}

func init() {
	proto.RegisterFile("cluster.proto", fileDescriptor_3cfb3b8ec240c376)
}

var fileDescriptor_3cfb3b8ec240c376 = []byte{
	// 481 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x4f, 0xdb, 0x40,
	0x10, 0x8d, 0x1d, 0x40, 0x64, 0xac, 0xa2, 0x66, 0x5b, 0x51, 0x63, 0x90, 0xb0, 0x7c, 0x69, 0x0e,
	0xed, 0x5a, 0x4a, 0x2f, 0x55, 0x6f, 0x80, 0x68, 0x1b, 0xa9, 0x42, 0xc8, 0x70, 0xe2, 0x52, 0xf9,
	0x63, 0x48, 0x56, 0xd8, 0xbb, 0xc6, 0xbb, 0x4e, 0x95, 0x1f, 0xd7, 0x7b, 0x7f, 0x56, 0x15, 0x7b,
	0x8d, 0x5d, 0x4c, 0x28, 0xb7, 0xdd, 0x79, 0xe3, 0xf7, 0x66, 0xdf, 0x1b, 0xc3, 0xab, 0x38, 0x2d,
	0xa5, 0xc2, 0x82, 0xe6, 0x85, 0x50, 0xc2, 0x39, 0x9c, 0x0b, 0x31, 0x4f, 0xd1, 0xaf, 0x6e, 0x51,
	0x79, 0xeb, 0x63, 0x96, 0xab, 0x95, 0x06, 0x8f, 0x1f, 0x83, 0x8a, 0x65, 0x28, 0x55, 0x98, 0xe5,
	0xba, 0xe1, 0x1d, 0x72, 0x85, 0x45, 0x5e, 0x30, 0x89, 0x3f, 0x33, 0x91, 0x60, 0x2a, 0x6b, 0xc0,
	0xfb, 0x6d, 0xc0, 0xf8, 0xb2, 0x8c, 0x52, 0x16, 0x9f, 0xd5, 0x72, 0x33, 0x7e, 0x2b, 0xc8, 0x1e,
	0x98, 0x2c, 0xb1, 0x0d, 0xd7, 0x98, 0x8c, 0x02, 0x93, 0x25, 0xc4, 0x05, 0x2b, 0x61, 0x32, 0x4f,
	0xc3, 0xd5, 0x45, 0x98, 0xa1, 0x6d, 0x56, 0x40, 0xb7, 0x44, 0x1c, 0xd8, 0x5d, 0x08, 0xa9, 0x2a,
	0x78, 0x58, 0xc1, 0x0f, 0x77, 0xf2, 0x19, 0x46, 0x71, 0x81, 0xa1, 0xc2, 0xe4, 0x44, 0xd9, 0xdb,
	0xae, 0x31, 0xb1, 0xa6, 0x0e, 0xad, 0x27, 0xa6, 0xcd, 0xc4, 0xf4, 0xba, 0x99, 0x38, 0x68, 0x9b,
	0xd7, 0xba, 0xbf, 0x30, 0xfa, 0xde, 0x10, 0xef, 0xd4, 0xba, 0x9d, 0x92, 0x77, 0x0a, 0xaf, 0xf5,
	0xe0, 0x32, 0x40, 0x99, 0x0b, 0x2e, 0x91, 0x50, 0xd8, 0xd5, 0xde, 0x49, 0xdb, 0x70, 0x87, 0x13,
	0x6b, 0x4a, 0x68, 0xef, 0x8d, 0xc1, 0x43, 0x8f, 0xf7, 0x15, 0x0e, 0x35, 0x70, 0xce, 0x97, 0xac,
	0x10, 0x3c, 0x43, 0xae, 0x5a, 0xba, 0xf7, 0xb0, 0x85, 0x7c, 0x29, 0x6d, 0xb3, 0xa2, 0x7a, 0x43,
	0xfb, 0xbd, 0x41, 0xd5, 0xe0, 0x5d, 0x80, 0x7d, 0x56, 0x8d, 0x7e, 0x12, 0xc7, 0x28, 0xe5, 0xb5,
	0xb8, 0x43, 0x1e, 0xe0, 0x7d, 0x89, 0x52, 0x91, 0x23, 0x18, 0x69, 0xbd, 0x59, 0x63, 0x6c, 0x5b,
	0x20, 0x6f, 0x61, 0x1b, 0xf9, 0x72, 0x96, 0x68, 0x67, 0xeb, 0x8b, 0x77, 0x0f, 0x07, 0x4f, 0xf0,
	0xe9, 0xa9, 0x5c, 0xb0, 0xc2, 0xb6, 0xac, 0x29, 0xbb, 0xa5, 0x7f, 0x25, 0xcd, 0x8d, 0x92, 0xc3,
	0xae, 0xe4, 0x15, 0x1c, 0xd7, 0x92, 0x4f, 0x3c, 0xf2, 0x45, 0x2f, 0x21, 0xb0, 0xc5, 0xdb, 0x15,
	0xa9, 0xce, 0xd3, 0x3f, 0x26, 0xec, 0x69, 0xbe, 0x2b, 0x2c, 0x96, 0x2c, 0x46, 0xf2, 0x05, 0xac,
	0x6f, 0xa8, 0x9a, 0xe4, 0xc8, 0x7e, 0x6f, 0x1d, 0xce, 0xd7, 0xdb, 0xed, 0x8c, 0xe9, 0xe3, 0x70,
	0xbd, 0x01, 0xb9, 0x84, 0xfd, 0xf6, 0xdb, 0x6e, 0x62, 0x1b, 0x69, 0x8e, 0xe8, 0x33, 0xf9, 0x7a,
	0x03, 0xf2, 0x03, 0xc6, 0x3d, 0xa3, 0xc9, 0x01, 0xdd, 0x14, 0xa6, 0xe3, 0xd0, 0x8d, 0xb9, 0x78,
	0x03, 0x72, 0xd3, 0xac, 0x41, 0x5f, 0x94, 0xb8, 0xf4, 0x3f, 0xf6, 0x3e, 0xcf, 0x7d, 0x4a, 0x6f,
	0x3e, 0xcc, 0x99, 0x5a, 0x94, 0x11, 0x8d, 0x45, 0xe6, 0xdf, 0x31, 0xae, 0xc4, 0xa2, 0x8c, 0xea,
	0xc3, 0xc7, 0x38, 0x65, 0x3e, 0x5b, 0xff, 0xe7, 0x3c, 0x4c, 0x7d, 0xb5, 0xca, 0x51, 0x46, 0x3b,
	0x95, 0x13, 0x9f, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x1c, 0x5c, 0x4a, 0x64, 0x4d, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ClusterServiceClient is the client API for ClusterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterServiceClient interface {
	GetClusters(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ClustersResponse, error)
	GetClusterEnvironments(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ClusterEnvironmentsResponse, error)
	CreateAccessToken(ctx context.Context, in *CreateAccessTokenRequest, opts ...grpc.CallOption) (*CreateAccessTokenResponse, error)
	CreateClusterEnvironment(ctx context.Context, in *CreateClusterEnvironmentRequest, opts ...grpc.CallOption) (*CreateAccessTokenResponse, error)
}

type clusterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewClusterServiceClient(cc grpc.ClientConnInterface) ClusterServiceClient {
	return &clusterServiceClient{cc}
}

func (c *clusterServiceClient) GetClusters(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ClustersResponse, error) {
	out := new(ClustersResponse)
	err := c.cc.Invoke(ctx, "/ClusterService/GetClusters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterServiceClient) GetClusterEnvironments(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ClusterEnvironmentsResponse, error) {
	out := new(ClusterEnvironmentsResponse)
	err := c.cc.Invoke(ctx, "/ClusterService/GetClusterEnvironments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterServiceClient) CreateAccessToken(ctx context.Context, in *CreateAccessTokenRequest, opts ...grpc.CallOption) (*CreateAccessTokenResponse, error) {
	out := new(CreateAccessTokenResponse)
	err := c.cc.Invoke(ctx, "/ClusterService/CreateAccessToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterServiceClient) CreateClusterEnvironment(ctx context.Context, in *CreateClusterEnvironmentRequest, opts ...grpc.CallOption) (*CreateAccessTokenResponse, error) {
	out := new(CreateAccessTokenResponse)
	err := c.cc.Invoke(ctx, "/ClusterService/CreateClusterEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterServiceServer is the server API for ClusterService service.
type ClusterServiceServer interface {
	GetClusters(context.Context, *empty.Empty) (*ClustersResponse, error)
	GetClusterEnvironments(context.Context, *empty.Empty) (*ClusterEnvironmentsResponse, error)
	CreateAccessToken(context.Context, *CreateAccessTokenRequest) (*CreateAccessTokenResponse, error)
	CreateClusterEnvironment(context.Context, *CreateClusterEnvironmentRequest) (*CreateAccessTokenResponse, error)
}

// UnimplementedClusterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedClusterServiceServer struct {
}

func (*UnimplementedClusterServiceServer) GetClusters(ctx context.Context, req *empty.Empty) (*ClustersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClusters not implemented")
}
func (*UnimplementedClusterServiceServer) GetClusterEnvironments(ctx context.Context, req *empty.Empty) (*ClusterEnvironmentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClusterEnvironments not implemented")
}
func (*UnimplementedClusterServiceServer) CreateAccessToken(ctx context.Context, req *CreateAccessTokenRequest) (*CreateAccessTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccessToken not implemented")
}
func (*UnimplementedClusterServiceServer) CreateClusterEnvironment(ctx context.Context, req *CreateClusterEnvironmentRequest) (*CreateAccessTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateClusterEnvironment not implemented")
}

func RegisterClusterServiceServer(s *grpc.Server, srv ClusterServiceServer) {
	s.RegisterService(&_ClusterService_serviceDesc, srv)
}

func _ClusterService_GetClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServiceServer).GetClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ClusterService/GetClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServiceServer).GetClusters(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterService_GetClusterEnvironments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServiceServer).GetClusterEnvironments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ClusterService/GetClusterEnvironments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServiceServer).GetClusterEnvironments(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterService_CreateAccessToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccessTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServiceServer).CreateAccessToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ClusterService/CreateAccessToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServiceServer).CreateAccessToken(ctx, req.(*CreateAccessTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterService_CreateClusterEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateClusterEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServiceServer).CreateClusterEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ClusterService/CreateClusterEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServiceServer).CreateClusterEnvironment(ctx, req.(*CreateClusterEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ClusterService",
	HandlerType: (*ClusterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetClusters",
			Handler:    _ClusterService_GetClusters_Handler,
		},
		{
			MethodName: "GetClusterEnvironments",
			Handler:    _ClusterService_GetClusterEnvironments_Handler,
		},
		{
			MethodName: "CreateAccessToken",
			Handler:    _ClusterService_CreateAccessToken_Handler,
		},
		{
			MethodName: "CreateClusterEnvironment",
			Handler:    _ClusterService_CreateClusterEnvironment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cluster.proto",
}
