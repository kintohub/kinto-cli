// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: kkc_models.proto

package types

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Block_Type int32

const (
	Block_NOT_SET     Block_Type = 0
	Block_BACKEND_API Block_Type = 1
	Block_STATIC_SITE Block_Type = 2
	Block_WEB_APP     Block_Type = 3
	Block_JAMSTACK    Block_Type = 4
	Block_JOB         Block_Type = 5
	Block_CRON_JOB    Block_Type = 6
	Block_WORKER      Block_Type = 7
	Block_CATALOG     Block_Type = 8
	Block_HELM        Block_Type = 9
)

// Enum value maps for Block_Type.
var (
	Block_Type_name = map[int32]string{
		0: "NOT_SET",
		1: "BACKEND_API",
		2: "STATIC_SITE",
		3: "WEB_APP",
		4: "JAMSTACK",
		5: "JOB",
		6: "CRON_JOB",
		7: "WORKER",
		8: "CATALOG",
		9: "HELM",
	}
	Block_Type_value = map[string]int32{
		"NOT_SET":     0,
		"BACKEND_API": 1,
		"STATIC_SITE": 2,
		"WEB_APP":     3,
		"JAMSTACK":    4,
		"JOB":         5,
		"CRON_JOB":    6,
		"WORKER":      7,
		"CATALOG":     8,
		"HELM":        9,
	}
)

func (x Block_Type) Enum() *Block_Type {
	p := new(Block_Type)
	*p = x
	return p
}

func (x Block_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Block_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_kkc_models_proto_enumTypes[0].Descriptor()
}

func (Block_Type) Type() protoreflect.EnumType {
	return &file_kkc_models_proto_enumTypes[0]
}

func (x Block_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Block_Type.Descriptor instead.
func (Block_Type) EnumDescriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{2, 0}
}

type BuildConfig_Language int32

const (
	BuildConfig_NOT_SET    BuildConfig_Language = 0
	BuildConfig_DOCKERFILE BuildConfig_Language = 1
	BuildConfig_GOLANG     BuildConfig_Language = 2
	BuildConfig_NODEJS     BuildConfig_Language = 3
	BuildConfig_PYTHON     BuildConfig_Language = 4
	BuildConfig_JAVA       BuildConfig_Language = 5
	BuildConfig_RUBY       BuildConfig_Language = 6
	BuildConfig_PHP        BuildConfig_Language = 7
)

// Enum value maps for BuildConfig_Language.
var (
	BuildConfig_Language_name = map[int32]string{
		0: "NOT_SET",
		1: "DOCKERFILE",
		2: "GOLANG",
		3: "NODEJS",
		4: "PYTHON",
		5: "JAVA",
		6: "RUBY",
		7: "PHP",
	}
	BuildConfig_Language_value = map[string]int32{
		"NOT_SET":    0,
		"DOCKERFILE": 1,
		"GOLANG":     2,
		"NODEJS":     3,
		"PYTHON":     4,
		"JAVA":       5,
		"RUBY":       6,
		"PHP":        7,
	}
)

func (x BuildConfig_Language) Enum() *BuildConfig_Language {
	p := new(BuildConfig_Language)
	*p = x
	return p
}

func (x BuildConfig_Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuildConfig_Language) Descriptor() protoreflect.EnumDescriptor {
	return file_kkc_models_proto_enumTypes[1].Descriptor()
}

func (BuildConfig_Language) Type() protoreflect.EnumType {
	return &file_kkc_models_proto_enumTypes[1]
}

func (x BuildConfig_Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuildConfig_Language.Descriptor instead.
func (BuildConfig_Language) EnumDescriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{4, 0}
}

type RunConfig_Protocol int32

const (
	RunConfig_NOT_SET RunConfig_Protocol = 0
	RunConfig_HTTP    RunConfig_Protocol = 1
	RunConfig_GRPC    RunConfig_Protocol = 2
)

// Enum value maps for RunConfig_Protocol.
var (
	RunConfig_Protocol_name = map[int32]string{
		0: "NOT_SET",
		1: "HTTP",
		2: "GRPC",
	}
	RunConfig_Protocol_value = map[string]int32{
		"NOT_SET": 0,
		"HTTP":    1,
		"GRPC":    2,
	}
)

func (x RunConfig_Protocol) Enum() *RunConfig_Protocol {
	p := new(RunConfig_Protocol)
	*p = x
	return p
}

func (x RunConfig_Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunConfig_Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_kkc_models_proto_enumTypes[2].Descriptor()
}

func (RunConfig_Protocol) Type() protoreflect.EnumType {
	return &file_kkc_models_proto_enumTypes[2]
}

func (x RunConfig_Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunConfig_Protocol.Descriptor instead.
func (RunConfig_Protocol) EnumDescriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{5, 0}
}

type Status_State int32

const (
	Status_NOT_SET Status_State = 0
	Status_FAIL    Status_State = 1
	Status_SUCCESS Status_State = 2
	Status_RUNNING Status_State = 3
	Status_PENDING Status_State = 4
	Status_ABORTED Status_State = 5
)

// Enum value maps for Status_State.
var (
	Status_State_name = map[int32]string{
		0: "NOT_SET",
		1: "FAIL",
		2: "SUCCESS",
		3: "RUNNING",
		4: "PENDING",
		5: "ABORTED",
	}
	Status_State_value = map[string]int32{
		"NOT_SET": 0,
		"FAIL":    1,
		"SUCCESS": 2,
		"RUNNING": 3,
		"PENDING": 4,
		"ABORTED": 5,
	}
)

func (x Status_State) Enum() *Status_State {
	p := new(Status_State)
	*p = x
	return p
}

func (x Status_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status_State) Descriptor() protoreflect.EnumDescriptor {
	return file_kkc_models_proto_enumTypes[3].Descriptor()
}

func (Status_State) Type() protoreflect.EnumType {
	return &file_kkc_models_proto_enumTypes[3]
}

func (x Status_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status_State.Descriptor instead.
func (Status_State) EnumDescriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{10, 0}
}

type BuildStatus_State int32

const (
	BuildStatus_NOT_SET        BuildStatus_State = 0
	BuildStatus_UNKNOWN        BuildStatus_State = 1
	BuildStatus_QUEUED         BuildStatus_State = 2
	BuildStatus_WORKING        BuildStatus_State = 3
	BuildStatus_SUCCESS        BuildStatus_State = 4
	BuildStatus_FAILURE        BuildStatus_State = 5
	BuildStatus_INTERNAL_ERROR BuildStatus_State = 6
	BuildStatus_TIMEOUT        BuildStatus_State = 7
	BuildStatus_CANCELLED      BuildStatus_State = 8
	BuildStatus_EXPIRED        BuildStatus_State = 9
)

// Enum value maps for BuildStatus_State.
var (
	BuildStatus_State_name = map[int32]string{
		0: "NOT_SET",
		1: "UNKNOWN",
		2: "QUEUED",
		3: "WORKING",
		4: "SUCCESS",
		5: "FAILURE",
		6: "INTERNAL_ERROR",
		7: "TIMEOUT",
		8: "CANCELLED",
		9: "EXPIRED",
	}
	BuildStatus_State_value = map[string]int32{
		"NOT_SET":        0,
		"UNKNOWN":        1,
		"QUEUED":         2,
		"WORKING":        3,
		"SUCCESS":        4,
		"FAILURE":        5,
		"INTERNAL_ERROR": 6,
		"TIMEOUT":        7,
		"CANCELLED":      8,
		"EXPIRED":        9,
	}
)

func (x BuildStatus_State) Enum() *BuildStatus_State {
	p := new(BuildStatus_State)
	*p = x
	return p
}

func (x BuildStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuildStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_kkc_models_proto_enumTypes[4].Descriptor()
}

func (BuildStatus_State) Type() protoreflect.EnumType {
	return &file_kkc_models_proto_enumTypes[4]
}

func (x BuildStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuildStatus_State.Descriptor instead.
func (BuildStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{12, 0}
}

type BlockStatus_State int32

const (
	BlockStatus_NOT_SET   BlockStatus_State = 0
	BlockStatus_HEALTHY   BlockStatus_State = 1
	BlockStatus_UNHEALTHY BlockStatus_State = 2
	BlockStatus_SUSPENDED BlockStatus_State = 3
)

// Enum value maps for BlockStatus_State.
var (
	BlockStatus_State_name = map[int32]string{
		0: "NOT_SET",
		1: "HEALTHY",
		2: "UNHEALTHY",
		3: "SUSPENDED",
	}
	BlockStatus_State_value = map[string]int32{
		"NOT_SET":   0,
		"HEALTHY":   1,
		"UNHEALTHY": 2,
		"SUSPENDED": 3,
	}
)

func (x BlockStatus_State) Enum() *BlockStatus_State {
	p := new(BlockStatus_State)
	*p = x
	return p
}

func (x BlockStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_kkc_models_proto_enumTypes[5].Descriptor()
}

func (BlockStatus_State) Type() protoreflect.EnumType {
	return &file_kkc_models_proto_enumTypes[5]
}

func (x BlockStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockStatus_State.Descriptor instead.
func (BlockStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{14, 0}
}

type BlockInstance_State int32

const (
	BlockInstance_NOT_SET    BlockInstance_State = 0
	BlockInstance_RUNNING    BlockInstance_State = 1
	BlockInstance_COMPLETED  BlockInstance_State = 2
	BlockInstance_ERROR      BlockInstance_State = 3
	BlockInstance_OOM_KILLED BlockInstance_State = 4
)

// Enum value maps for BlockInstance_State.
var (
	BlockInstance_State_name = map[int32]string{
		0: "NOT_SET",
		1: "RUNNING",
		2: "COMPLETED",
		3: "ERROR",
		4: "OOM_KILLED",
	}
	BlockInstance_State_value = map[string]int32{
		"NOT_SET":    0,
		"RUNNING":    1,
		"COMPLETED":  2,
		"ERROR":      3,
		"OOM_KILLED": 4,
	}
)

func (x BlockInstance_State) Enum() *BlockInstance_State {
	p := new(BlockInstance_State)
	*p = x
	return p
}

func (x BlockInstance_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockInstance_State) Descriptor() protoreflect.EnumDescriptor {
	return file_kkc_models_proto_enumTypes[6].Descriptor()
}

func (BlockInstance_State) Type() protoreflect.EnumType {
	return &file_kkc_models_proto_enumTypes[6]
}

func (x BlockInstance_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockInstance_State.Descriptor instead.
func (BlockInstance_State) EnumDescriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{17, 0}
}

type AccessPermission_Role int32

const (
	AccessPermission_NOT_SET       AccessPermission_Role = 0
	AccessPermission_PUBLIC        AccessPermission_Role = 1 // no auth required
	AccessPermission_AUTHENTICATED AccessPermission_Role = 2 // creation of new resources (for ownership)
	AccessPermission_VIEWER        AccessPermission_Role = 3 // no invite, no edit, full read
	AccessPermission_EDITOR        AccessPermission_Role = 4 // no invite, full edit
	AccessPermission_ADMIN         AccessPermission_Role = 5 // full power, no billing (invite people)
	AccessPermission_OWNER         AccessPermission_Role = 6 // billing
)

// Enum value maps for AccessPermission_Role.
var (
	AccessPermission_Role_name = map[int32]string{
		0: "NOT_SET",
		1: "PUBLIC",
		2: "AUTHENTICATED",
		3: "VIEWER",
		4: "EDITOR",
		5: "ADMIN",
		6: "OWNER",
	}
	AccessPermission_Role_value = map[string]int32{
		"NOT_SET":       0,
		"PUBLIC":        1,
		"AUTHENTICATED": 2,
		"VIEWER":        3,
		"EDITOR":        4,
		"ADMIN":         5,
		"OWNER":         6,
	}
)

func (x AccessPermission_Role) Enum() *AccessPermission_Role {
	p := new(AccessPermission_Role)
	*p = x
	return p
}

func (x AccessPermission_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessPermission_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_kkc_models_proto_enumTypes[7].Descriptor()
}

func (AccessPermission_Role) Type() protoreflect.EnumType {
	return &file_kkc_models_proto_enumTypes[7]
}

func (x AccessPermission_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessPermission_Role.Descriptor instead.
func (AccessPermission_Role) EnumDescriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{28, 0}
}

type JobStatus_State int32

const (
	JobStatus_NOT_SET    JobStatus_State = 0
	JobStatus_PENDING    JobStatus_State = 1
	JobStatus_RUNNING    JobStatus_State = 2
	JobStatus_COMPLETED  JobStatus_State = 3
	JobStatus_DELETED    JobStatus_State = 4
	JobStatus_ERROR      JobStatus_State = 5
	JobStatus_OOM_KILLED JobStatus_State = 6
)

// Enum value maps for JobStatus_State.
var (
	JobStatus_State_name = map[int32]string{
		0: "NOT_SET",
		1: "PENDING",
		2: "RUNNING",
		3: "COMPLETED",
		4: "DELETED",
		5: "ERROR",
		6: "OOM_KILLED",
	}
	JobStatus_State_value = map[string]int32{
		"NOT_SET":    0,
		"PENDING":    1,
		"RUNNING":    2,
		"COMPLETED":  3,
		"DELETED":    4,
		"ERROR":      5,
		"OOM_KILLED": 6,
	}
)

func (x JobStatus_State) Enum() *JobStatus_State {
	p := new(JobStatus_State)
	*p = x
	return p
}

func (x JobStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_kkc_models_proto_enumTypes[8].Descriptor()
}

func (JobStatus_State) Type() protoreflect.EnumType {
	return &file_kkc_models_proto_enumTypes[8]
}

func (x JobStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobStatus_State.Descriptor instead.
func (JobStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{30, 0}
}

type Environment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Environment) Reset() {
	*x = Environment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Environment) ProtoMessage() {}

func (x *Environment) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Environment.ProtoReflect.Descriptor instead.
func (*Environment) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{0}
}

func (x *Environment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Blocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Block `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Blocks) Reset() {
	*x = Blocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blocks) ProtoMessage() {}

func (x *Blocks) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blocks.ProtoReflect.Descriptor instead.
func (*Blocks) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{1}
}

func (x *Blocks) GetItems() []*Block {
	if x != nil {
		return x.Items
	}
	return nil
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EnvId         string              `protobuf:"bytes,3,opt,name=envId,proto3" json:"envId,omitempty"`
	DisplayName   string              `protobuf:"bytes,4,opt,name=displayName,proto3" json:"displayName,omitempty"`
	Releases      map[string]*Release `protobuf:"bytes,5,rep,name=releases,proto3" json:"releases,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CustomDomains []string            `protobuf:"bytes,6,rep,name=customDomains,proto3" json:"customDomains,omitempty"`
	IsPublicURL   bool                `protobuf:"varint,7,opt,name=isPublicURL,proto3" json:"isPublicURL,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{2}
}

func (x *Block) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Block) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Block) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *Block) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Block) GetReleases() map[string]*Release {
	if x != nil {
		return x.Releases
	}
	return nil
}

func (x *Block) GetCustomDomains() []string {
	if x != nil {
		return x.CustomDomains
	}
	return nil
}

func (x *Block) GetIsPublicURL() bool {
	if x != nil {
		return x.IsPublicURL
	}
	return false
}

type Release struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	BuildConfig *BuildConfig         `protobuf:"bytes,3,opt,name=buildConfig,proto3" json:"buildConfig,omitempty"`
	RunConfig   *RunConfig           `protobuf:"bytes,4,opt,name=runConfig,proto3" json:"runConfig,omitempty"`
	Status      *Status              `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Release) Reset() {
	*x = Release{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Release) ProtoMessage() {}

func (x *Release) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Release.ProtoReflect.Descriptor instead.
func (*Release) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{3}
}

func (x *Release) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Release) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Release) GetBuildConfig() *BuildConfig {
	if x != nil {
		return x.BuildConfig
	}
	return nil
}

func (x *Release) GetRunConfig() *RunConfig {
	if x != nil {
		return x.RunConfig
	}
	return nil
}

func (x *Release) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type BuildConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Image              string               `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Language           BuildConfig_Language `protobuf:"varint,3,opt,name=language,proto3,enum=BuildConfig_Language" json:"language,omitempty"`
	LanguageVersion    string               `protobuf:"bytes,4,opt,name=languageVersion,proto3" json:"languageVersion,omitempty"`
	BuildCommand       string               `protobuf:"bytes,5,opt,name=buildCommand,proto3" json:"buildCommand,omitempty"`
	RunCommand         string               `protobuf:"bytes,6,opt,name=runCommand,proto3" json:"runCommand,omitempty"`
	PathToCode         string               `protobuf:"bytes,7,opt,name=pathToCode,proto3" json:"pathToCode,omitempty"`
	DockerfileFileName string               `protobuf:"bytes,8,opt,name=dockerfileFileName,proto3" json:"dockerfileFileName,omitempty"`
	BuildArgs          map[string]string    `protobuf:"bytes,9,rep,name=buildArgs,proto3" json:"buildArgs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Repository         *Repository          `protobuf:"bytes,10,opt,name=repository,proto3" json:"repository,omitempty"`
}

func (x *BuildConfig) Reset() {
	*x = BuildConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildConfig) ProtoMessage() {}

func (x *BuildConfig) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildConfig.ProtoReflect.Descriptor instead.
func (*BuildConfig) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{4}
}

func (x *BuildConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BuildConfig) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *BuildConfig) GetLanguage() BuildConfig_Language {
	if x != nil {
		return x.Language
	}
	return BuildConfig_NOT_SET
}

func (x *BuildConfig) GetLanguageVersion() string {
	if x != nil {
		return x.LanguageVersion
	}
	return ""
}

func (x *BuildConfig) GetBuildCommand() string {
	if x != nil {
		return x.BuildCommand
	}
	return ""
}

func (x *BuildConfig) GetRunCommand() string {
	if x != nil {
		return x.RunCommand
	}
	return ""
}

func (x *BuildConfig) GetPathToCode() string {
	if x != nil {
		return x.PathToCode
	}
	return ""
}

func (x *BuildConfig) GetDockerfileFileName() string {
	if x != nil {
		return x.DockerfileFileName
	}
	return ""
}

func (x *BuildConfig) GetBuildArgs() map[string]string {
	if x != nil {
		return x.BuildArgs
	}
	return nil
}

func (x *BuildConfig) GetRepository() *Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

type RunConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                    Block_Type         `protobuf:"varint,1,opt,name=type,proto3,enum=Block_Type" json:"type,omitempty"`
	Port                    string             `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	AutoScaling             *AutoScaling       `protobuf:"bytes,3,opt,name=autoScaling,proto3" json:"autoScaling,omitempty"`
	EnvVars                 map[string]string  `protobuf:"bytes,4,rep,name=envVars,proto3" json:"envVars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Resources               *Resources         `protobuf:"bytes,5,opt,name=resources,proto3" json:"resources,omitempty"`
	TimeoutInSec            int32              `protobuf:"varint,6,opt,name=timeoutInSec,proto3" json:"timeoutInSec,omitempty"`
	JobSpec                 *JobSpec           `protobuf:"bytes,7,opt,name=jobSpec,proto3" json:"jobSpec,omitempty"`
	Host                    string             `protobuf:"bytes,8,opt,name=host,proto3" json:"host,omitempty"`
	CostOptimizationEnabled bool               `protobuf:"varint,9,opt,name=costOptimizationEnabled,proto3" json:"costOptimizationEnabled,omitempty"`
	SleepModeEnabled        bool               `protobuf:"varint,10,opt,name=sleepModeEnabled,proto3" json:"sleepModeEnabled,omitempty"`
	Protocol                RunConfig_Protocol `protobuf:"varint,11,opt,name=protocol,proto3,enum=RunConfig_Protocol" json:"protocol,omitempty"`
}

func (x *RunConfig) Reset() {
	*x = RunConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunConfig) ProtoMessage() {}

func (x *RunConfig) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunConfig.ProtoReflect.Descriptor instead.
func (*RunConfig) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{5}
}

func (x *RunConfig) GetType() Block_Type {
	if x != nil {
		return x.Type
	}
	return Block_NOT_SET
}

func (x *RunConfig) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *RunConfig) GetAutoScaling() *AutoScaling {
	if x != nil {
		return x.AutoScaling
	}
	return nil
}

func (x *RunConfig) GetEnvVars() map[string]string {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

func (x *RunConfig) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *RunConfig) GetTimeoutInSec() int32 {
	if x != nil {
		return x.TimeoutInSec
	}
	return 0
}

func (x *RunConfig) GetJobSpec() *JobSpec {
	if x != nil {
		return x.JobSpec
	}
	return nil
}

func (x *RunConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RunConfig) GetCostOptimizationEnabled() bool {
	if x != nil {
		return x.CostOptimizationEnabled
	}
	return false
}

func (x *RunConfig) GetSleepModeEnabled() bool {
	if x != nil {
		return x.SleepModeEnabled
	}
	return false
}

func (x *RunConfig) GetProtocol() RunConfig_Protocol {
	if x != nil {
		return x.Protocol
	}
	return RunConfig_NOT_SET
}

type Repository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url                  string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	AccessToken          string `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	Branch               string `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
	GithubInstallationId string `protobuf:"bytes,4,opt,name=githubInstallationId,proto3" json:"githubInstallationId,omitempty"`
}

func (x *Repository) Reset() {
	*x = Repository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repository) ProtoMessage() {}

func (x *Repository) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repository.ProtoReflect.Descriptor instead.
func (*Repository) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{6}
}

func (x *Repository) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Repository) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *Repository) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *Repository) GetGithubInstallationId() string {
	if x != nil {
		return x.GithubInstallationId
	}
	return ""
}

type JobSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CronPattern  string `protobuf:"bytes,1,opt,name=cronPattern,proto3" json:"cronPattern,omitempty"`
	TimeoutInSec int32  `protobuf:"varint,2,opt,name=timeoutInSec,proto3" json:"timeoutInSec,omitempty"`
}

func (x *JobSpec) Reset() {
	*x = JobSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSpec) ProtoMessage() {}

func (x *JobSpec) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSpec.ProtoReflect.Descriptor instead.
func (*JobSpec) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{7}
}

func (x *JobSpec) GetCronPattern() string {
	if x != nil {
		return x.CronPattern
	}
	return ""
}

func (x *JobSpec) GetTimeoutInSec() int32 {
	if x != nil {
		return x.TimeoutInSec
	}
	return 0
}

type AutoScaling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min        int32 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max        int32 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	CpuPercent int32 `protobuf:"varint,3,opt,name=cpuPercent,proto3" json:"cpuPercent,omitempty"`
}

func (x *AutoScaling) Reset() {
	*x = AutoScaling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScaling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScaling) ProtoMessage() {}

func (x *AutoScaling) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScaling.ProtoReflect.Descriptor instead.
func (*AutoScaling) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{8}
}

func (x *AutoScaling) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *AutoScaling) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *AutoScaling) GetCpuPercent() int32 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

type Resources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemoryInMB int32   `protobuf:"varint,1,opt,name=memoryInMB,proto3" json:"memoryInMB,omitempty"`
	CpuInCore  float32 `protobuf:"fixed32,2,opt,name=cpuInCore,proto3" json:"cpuInCore,omitempty"`
}

func (x *Resources) Reset() {
	*x = Resources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{9}
}

func (x *Resources) GetMemoryInMB() int32 {
	if x != nil {
		return x.MemoryInMB
	}
	return 0
}

func (x *Resources) GetCpuInCore() float32 {
	if x != nil {
		return x.CpuInCore
	}
	return 0
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State Status_State `protobuf:"varint,2,opt,name=state,proto3,enum=Status_State" json:"state,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{10}
}

func (x *Status) GetState() Status_State {
	if x != nil {
		return x.State
	}
	return Status_NOT_SET
}

type ReleasesStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockName string             `protobuf:"bytes,1,opt,name=blockName,proto3" json:"blockName,omitempty"`
	EnvId     string             `protobuf:"bytes,2,opt,name=envId,proto3" json:"envId,omitempty"`
	Releases  map[string]*Status `protobuf:"bytes,3,rep,name=releases,proto3" json:"releases,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ReleasesStatus) Reset() {
	*x = ReleasesStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleasesStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasesStatus) ProtoMessage() {}

func (x *ReleasesStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasesStatus.ProtoReflect.Descriptor instead.
func (*ReleasesStatus) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{11}
}

func (x *ReleasesStatus) GetBlockName() string {
	if x != nil {
		return x.BlockName
	}
	return ""
}

func (x *ReleasesStatus) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *ReleasesStatus) GetReleases() map[string]*Status {
	if x != nil {
		return x.Releases
	}
	return nil
}

type BuildStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State      BuildStatus_State    `protobuf:"varint,1,opt,name=state,proto3,enum=BuildStatus_State" json:"state,omitempty"`
	StartTime  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	FinishTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=finishTime,proto3" json:"finishTime,omitempty"`
}

func (x *BuildStatus) Reset() {
	*x = BuildStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildStatus) ProtoMessage() {}

func (x *BuildStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildStatus.ProtoReflect.Descriptor instead.
func (*BuildStatus) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{12}
}

func (x *BuildStatus) GetState() BuildStatus_State {
	if x != nil {
		return x.State
	}
	return BuildStatus_NOT_SET
}

func (x *BuildStatus) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *BuildStatus) GetFinishTime() *timestamp.Timestamp {
	if x != nil {
		return x.FinishTime
	}
	return nil
}

type ConsoleLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceName string `protobuf:"bytes,1,opt,name=instanceName,proto3" json:"instanceName,omitempty"`
	Data         []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ConsoleLog) Reset() {
	*x = ConsoleLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsoleLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsoleLog) ProtoMessage() {}

func (x *ConsoleLog) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsoleLog.ProtoReflect.Descriptor instead.
func (*ConsoleLog) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{13}
}

func (x *ConsoleLog) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *ConsoleLog) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type BlockStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockName string            `protobuf:"bytes,1,opt,name=blockName,proto3" json:"blockName,omitempty"`
	EnvId     string            `protobuf:"bytes,2,opt,name=envId,proto3" json:"envId,omitempty"`
	ReleaseId string            `protobuf:"bytes,3,opt,name=releaseId,proto3" json:"releaseId,omitempty"`
	State     BlockStatus_State `protobuf:"varint,7,opt,name=state,proto3,enum=BlockStatus_State" json:"state,omitempty"`
}

func (x *BlockStatus) Reset() {
	*x = BlockStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStatus) ProtoMessage() {}

func (x *BlockStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStatus.ProtoReflect.Descriptor instead.
func (*BlockStatus) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{14}
}

func (x *BlockStatus) GetBlockName() string {
	if x != nil {
		return x.BlockName
	}
	return ""
}

func (x *BlockStatus) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *BlockStatus) GetReleaseId() string {
	if x != nil {
		return x.ReleaseId
	}
	return ""
}

func (x *BlockStatus) GetState() BlockStatus_State {
	if x != nil {
		return x.State
	}
	return BlockStatus_NOT_SET
}

type BlockStatuses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockStatuses []*BlockStatus `protobuf:"bytes,1,rep,name=blockStatuses,proto3" json:"blockStatuses,omitempty"`
}

func (x *BlockStatuses) Reset() {
	*x = BlockStatuses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockStatuses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStatuses) ProtoMessage() {}

func (x *BlockStatuses) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStatuses.ProtoReflect.Descriptor instead.
func (*BlockStatuses) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{15}
}

func (x *BlockStatuses) GetBlockStatuses() []*BlockStatus {
	if x != nil {
		return x.BlockStatuses
	}
	return nil
}

type BlockMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockName string                    `protobuf:"bytes,1,opt,name=blockName,proto3" json:"blockName,omitempty"`
	EnvId     string                    `protobuf:"bytes,2,opt,name=envId,proto3" json:"envId,omitempty"`
	Instances map[string]*BlockInstance `protobuf:"bytes,3,rep,name=instances,proto3" json:"instances,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Storages  map[string]*BlockStorage  `protobuf:"bytes,5,rep,name=storages,proto3" json:"storages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BlockMetrics) Reset() {
	*x = BlockMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockMetrics) ProtoMessage() {}

func (x *BlockMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockMetrics.ProtoReflect.Descriptor instead.
func (*BlockMetrics) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{16}
}

func (x *BlockMetrics) GetBlockName() string {
	if x != nil {
		return x.BlockName
	}
	return ""
}

func (x *BlockMetrics) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *BlockMetrics) GetInstances() map[string]*BlockInstance {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *BlockMetrics) GetStorages() map[string]*BlockStorage {
	if x != nil {
		return x.Storages
	}
	return nil
}

type BlockInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ReleaseId   string              `protobuf:"bytes,2,opt,name=releaseId,proto3" json:"releaseId,omitempty"`
	CpuRequests int64               `protobuf:"varint,3,opt,name=cpuRequests,proto3" json:"cpuRequests,omitempty"`
	CpuUsage    int64               `protobuf:"varint,4,opt,name=cpuUsage,proto3" json:"cpuUsage,omitempty"`
	MemRequests int64               `protobuf:"varint,5,opt,name=memRequests,proto3" json:"memRequests,omitempty"`
	MemUsage    int64               `protobuf:"varint,6,opt,name=memUsage,proto3" json:"memUsage,omitempty"`
	Restarts    int32               `protobuf:"varint,7,opt,name=restarts,proto3" json:"restarts,omitempty"`
	State       BlockInstance_State `protobuf:"varint,8,opt,name=state,proto3,enum=BlockInstance_State" json:"state,omitempty"`
}

func (x *BlockInstance) Reset() {
	*x = BlockInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockInstance) ProtoMessage() {}

func (x *BlockInstance) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockInstance.ProtoReflect.Descriptor instead.
func (*BlockInstance) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{17}
}

func (x *BlockInstance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BlockInstance) GetReleaseId() string {
	if x != nil {
		return x.ReleaseId
	}
	return ""
}

func (x *BlockInstance) GetCpuRequests() int64 {
	if x != nil {
		return x.CpuRequests
	}
	return 0
}

func (x *BlockInstance) GetCpuUsage() int64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *BlockInstance) GetMemRequests() int64 {
	if x != nil {
		return x.MemRequests
	}
	return 0
}

func (x *BlockInstance) GetMemUsage() int64 {
	if x != nil {
		return x.MemUsage
	}
	return 0
}

func (x *BlockInstance) GetRestarts() int32 {
	if x != nil {
		return x.Restarts
	}
	return 0
}

func (x *BlockInstance) GetState() BlockInstance_State {
	if x != nil {
		return x.State
	}
	return BlockInstance_NOT_SET
}

type BlockStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CapacityInBytes int64  `protobuf:"varint,2,opt,name=capacityInBytes,proto3" json:"capacityInBytes,omitempty"`
	UsagePercent    string `protobuf:"bytes,3,opt,name=usagePercent,proto3" json:"usagePercent,omitempty"`
	MountPath       string `protobuf:"bytes,4,opt,name=mountPath,proto3" json:"mountPath,omitempty"`
	InstanceId      string `protobuf:"bytes,5,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
}

func (x *BlockStorage) Reset() {
	*x = BlockStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStorage) ProtoMessage() {}

func (x *BlockStorage) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStorage.ProtoReflect.Descriptor instead.
func (*BlockStorage) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{18}
}

func (x *BlockStorage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BlockStorage) GetCapacityInBytes() int64 {
	if x != nil {
		return x.CapacityInBytes
	}
	return 0
}

func (x *BlockStorage) GetUsagePercent() string {
	if x != nil {
		return x.UsagePercent
	}
	return ""
}

func (x *BlockStorage) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

func (x *BlockStorage) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type BlocksMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks map[string]*BlockMetrics `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BlocksMetrics) Reset() {
	*x = BlocksMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlocksMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlocksMetrics) ProtoMessage() {}

func (x *BlocksMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlocksMetrics.ProtoReflect.Descriptor instead.
func (*BlocksMetrics) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{19}
}

func (x *BlocksMetrics) GetBlocks() map[string]*BlockMetrics {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type Language struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language     BuildConfig_Language `protobuf:"varint,1,opt,name=language,proto3,enum=BuildConfig_Language" json:"language,omitempty"`
	Image        string               `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	VersionsTags map[string]string    `protobuf:"bytes,3,rep,name=versionsTags,proto3" json:"versionsTags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Language) Reset() {
	*x = Language{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Language) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Language) ProtoMessage() {}

func (x *Language) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Language.ProtoReflect.Descriptor instead.
func (*Language) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{20}
}

func (x *Language) GetLanguage() BuildConfig_Language {
	if x != nil {
		return x.Language
	}
	return BuildConfig_NOT_SET
}

func (x *Language) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Language) GetVersionsTags() map[string]string {
	if x != nil {
		return x.VersionsTags
	}
	return nil
}

type MemoryOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue int32   `protobuf:"varint,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Values       []int32 `protobuf:"varint,2,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *MemoryOptions) Reset() {
	*x = MemoryOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryOptions) ProtoMessage() {}

func (x *MemoryOptions) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryOptions.ProtoReflect.Descriptor instead.
func (*MemoryOptions) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{21}
}

func (x *MemoryOptions) GetDefaultValue() int32 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *MemoryOptions) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

type CPUOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue float32   `protobuf:"fixed32,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Values       []float32 `protobuf:"fixed32,2,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *CPUOptions) Reset() {
	*x = CPUOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUOptions) ProtoMessage() {}

func (x *CPUOptions) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUOptions.ProtoReflect.Descriptor instead.
func (*CPUOptions) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{22}
}

func (x *CPUOptions) GetDefaultValue() float32 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *CPUOptions) GetValues() []float32 {
	if x != nil {
		return x.Values
	}
	return nil
}

type TimeoutOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultValue int32   `protobuf:"varint,1,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Values       []int32 `protobuf:"varint,2,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *TimeoutOptions) Reset() {
	*x = TimeoutOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeoutOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeoutOptions) ProtoMessage() {}

func (x *TimeoutOptions) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeoutOptions.ProtoReflect.Descriptor instead.
func (*TimeoutOptions) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{23}
}

func (x *TimeoutOptions) GetDefaultValue() int32 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *TimeoutOptions) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

type AutoScalingOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultMinValue int32   `protobuf:"varint,1,opt,name=defaultMinValue,proto3" json:"defaultMinValue,omitempty"`
	DefaultMaxValue int32   `protobuf:"varint,2,opt,name=defaultMaxValue,proto3" json:"defaultMaxValue,omitempty"`
	Values          []int32 `protobuf:"varint,3,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *AutoScalingOptions) Reset() {
	*x = AutoScalingOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScalingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScalingOptions) ProtoMessage() {}

func (x *AutoScalingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScalingOptions.ProtoReflect.Descriptor instead.
func (*AutoScalingOptions) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{24}
}

func (x *AutoScalingOptions) GetDefaultMinValue() int32 {
	if x != nil {
		return x.DefaultMinValue
	}
	return 0
}

func (x *AutoScalingOptions) GetDefaultMaxValue() int32 {
	if x != nil {
		return x.DefaultMaxValue
	}
	return 0
}

func (x *AutoScalingOptions) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

type KintoConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Languages          []*Language         `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
	MemoryOptions      *MemoryOptions      `protobuf:"bytes,2,opt,name=memoryOptions,proto3" json:"memoryOptions,omitempty"`
	CpuOptions         *CPUOptions         `protobuf:"bytes,3,opt,name=cpuOptions,proto3" json:"cpuOptions,omitempty"`
	TimeoutOptions     *TimeoutOptions     `protobuf:"bytes,4,opt,name=timeoutOptions,proto3" json:"timeoutOptions,omitempty"`
	AutoScalingOptions *AutoScalingOptions `protobuf:"bytes,5,opt,name=autoScalingOptions,proto3" json:"autoScalingOptions,omitempty"`
	JobTimeoutOptions  *TimeoutOptions     `protobuf:"bytes,6,opt,name=jobTimeoutOptions,proto3" json:"jobTimeoutOptions,omitempty"`
}

func (x *KintoConfiguration) Reset() {
	*x = KintoConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KintoConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KintoConfiguration) ProtoMessage() {}

func (x *KintoConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KintoConfiguration.ProtoReflect.Descriptor instead.
func (*KintoConfiguration) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{25}
}

func (x *KintoConfiguration) GetLanguages() []*Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *KintoConfiguration) GetMemoryOptions() *MemoryOptions {
	if x != nil {
		return x.MemoryOptions
	}
	return nil
}

func (x *KintoConfiguration) GetCpuOptions() *CPUOptions {
	if x != nil {
		return x.CpuOptions
	}
	return nil
}

func (x *KintoConfiguration) GetTimeoutOptions() *TimeoutOptions {
	if x != nil {
		return x.TimeoutOptions
	}
	return nil
}

func (x *KintoConfiguration) GetAutoScalingOptions() *AutoScalingOptions {
	if x != nil {
		return x.AutoScalingOptions
	}
	return nil
}

func (x *KintoConfiguration) GetJobTimeoutOptions() *TimeoutOptions {
	if x != nil {
		return x.JobTimeoutOptions
	}
	return nil
}

type Logs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Logs) Reset() {
	*x = Logs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Logs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logs) ProtoMessage() {}

func (x *Logs) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logs.ProtoReflect.Descriptor instead.
func (*Logs) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{26}
}

func (x *Logs) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AccessTokenData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterAccess     *AccessPermission `protobuf:"bytes,1,opt,name=clusterAccess,proto3" json:"clusterAccess,omitempty"`
	EnvironmentAccess *AccessPermission `protobuf:"bytes,2,opt,name=environmentAccess,proto3" json:"environmentAccess,omitempty"` // if clsuter admin/owner - this would be nil
	Metadata          map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AccessTokenData) Reset() {
	*x = AccessTokenData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessTokenData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessTokenData) ProtoMessage() {}

func (x *AccessTokenData) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessTokenData.ProtoReflect.Descriptor instead.
func (*AccessTokenData) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{27}
}

func (x *AccessTokenData) GetClusterAccess() *AccessPermission {
	if x != nil {
		return x.ClusterAccess
	}
	return nil
}

func (x *AccessTokenData) GetEnvironmentAccess() *AccessPermission {
	if x != nil {
		return x.EnvironmentAccess
	}
	return nil
}

func (x *AccessTokenData) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type AccessPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string                `protobuf:"bytes,1,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	Role       AccessPermission_Role `protobuf:"varint,2,opt,name=role,proto3,enum=AccessPermission_Role" json:"role,omitempty"`
}

func (x *AccessPermission) Reset() {
	*x = AccessPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPermission) ProtoMessage() {}

func (x *AccessPermission) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPermission.ProtoReflect.Descriptor instead.
func (*AccessPermission) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{28}
}

func (x *AccessPermission) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *AccessPermission) GetRole() AccessPermission_Role {
	if x != nil {
		return x.Role
	}
	return AccessPermission_NOT_SET
}

type ClusterSecretData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId                   string `protobuf:"bytes,1,opt,name=ClusterId,proto3" json:"ClusterId,omitempty"`
	ClusterClientSecret         string `protobuf:"bytes,2,opt,name=ClusterClientSecret,proto3" json:"ClusterClientSecret,omitempty"`
	ClusterAccessTokenSecretKey []byte `protobuf:"bytes,3,opt,name=ClusterAccessTokenSecretKey,proto3" json:"ClusterAccessTokenSecretKey,omitempty"`
}

func (x *ClusterSecretData) Reset() {
	*x = ClusterSecretData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterSecretData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSecretData) ProtoMessage() {}

func (x *ClusterSecretData) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSecretData.ProtoReflect.Descriptor instead.
func (*ClusterSecretData) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{29}
}

func (x *ClusterSecretData) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ClusterSecretData) GetClusterClientSecret() string {
	if x != nil {
		return x.ClusterClientSecret
	}
	return ""
}

func (x *ClusterSecretData) GetClusterAccessTokenSecretKey() []byte {
	if x != nil {
		return x.ClusterAccessTokenSecretKey
	}
	return nil
}

type JobStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceName   string          `protobuf:"bytes,1,opt,name=instanceName,proto3" json:"instanceName,omitempty"`
	State          JobStatus_State `protobuf:"varint,2,opt,name=state,proto3,enum=JobStatus_State" json:"state,omitempty"`
	StartTimestamp int64           `protobuf:"varint,3,opt,name=startTimestamp,proto3" json:"startTimestamp,omitempty"`
	EndTimestamp   int64           `protobuf:"varint,4,opt,name=endTimestamp,proto3" json:"endTimestamp,omitempty"`
}

func (x *JobStatus) Reset() {
	*x = JobStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatus) ProtoMessage() {}

func (x *JobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatus.ProtoReflect.Descriptor instead.
func (*JobStatus) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{30}
}

func (x *JobStatus) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *JobStatus) GetState() JobStatus_State {
	if x != nil {
		return x.State
	}
	return JobStatus_NOT_SET
}

func (x *JobStatus) GetStartTimestamp() int64 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

func (x *JobStatus) GetEndTimestamp() int64 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

type TeleportServiceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host        string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Credentials string `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *TeleportServiceData) Reset() {
	*x = TeleportServiceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kkc_models_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeleportServiceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeleportServiceData) ProtoMessage() {}

func (x *TeleportServiceData) ProtoReflect() protoreflect.Message {
	mi := &file_kkc_models_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeleportServiceData.ProtoReflect.Descriptor instead.
func (*TeleportServiceData) Descriptor() ([]byte, []int) {
	return file_kkc_models_proto_rawDescGZIP(), []int{31}
}

func (x *TeleportServiceData) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *TeleportServiceData) GetCredentials() string {
	if x != nil {
		return x.Credentials
	}
	return ""
}

var File_kkc_models_proto protoreflect.FileDescriptor

var file_kkc_models_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6b, 0x6b, 0x63, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x1d, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x26, 0x0a, 0x06, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb1, 0x03, 0x0a, 0x05, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x76, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x55, 0x52, 0x4c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x52, 0x4c, 0x1a, 0x45, 0x0a, 0x0d, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x8a, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f,
	0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x43, 0x4b, 0x45,
	0x4e, 0x44, 0x5f, 0x41, 0x50, 0x49, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54,
	0x49, 0x43, 0x5f, 0x53, 0x49, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x45, 0x42,
	0x5f, 0x41, 0x50, 0x50, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4a, 0x41, 0x4d, 0x53, 0x54, 0x41,
	0x43, 0x4b, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x4f, 0x42, 0x10, 0x05, 0x12, 0x0c, 0x0a,
	0x08, 0x43, 0x52, 0x4f, 0x4e, 0x5f, 0x4a, 0x4f, 0x42, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x57,
	0x4f, 0x52, 0x4b, 0x45, 0x52, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x41, 0x54, 0x41, 0x4c,
	0x4f, 0x47, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x45, 0x4c, 0x4d, 0x10, 0x09, 0x22, 0xce,
	0x01, 0x0a, 0x07, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xb4, 0x04, 0x0a, 0x0b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x75, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x54, 0x6f,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68,
	0x54, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x66, 0x69, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x41,
	0x72, 0x67, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x72, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x72, 0x67,
	0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x3c,
	0x0a, 0x0e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x68, 0x0a, 0x08,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x54, 0x5f,
	0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x4f, 0x43, 0x4b, 0x45, 0x52, 0x46,
	0x49, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4f, 0x4c, 0x41, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x44, 0x45, 0x4a, 0x53, 0x10, 0x03, 0x12, 0x0a, 0x0a,
	0x06, 0x50, 0x59, 0x54, 0x48, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x41, 0x56,
	0x41, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x55, 0x42, 0x59, 0x10, 0x06, 0x12, 0x07, 0x0a,
	0x03, 0x50, 0x48, 0x50, 0x10, 0x07, 0x22, 0xa9, 0x04, 0x0a, 0x09, 0x52, 0x75, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x61, 0x75, 0x74,
	0x6f, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x61, 0x75,
	0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x07, 0x65, 0x6e, 0x76,
	0x56, 0x61, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x52, 0x75, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x09,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x12, 0x22, 0x0a, 0x07, 0x6a, 0x6f,
	0x62, 0x53, 0x70, 0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4a, 0x6f,
	0x62, 0x53, 0x70, 0x65, 0x63, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x17, 0x63, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x73, 0x6c, 0x65, 0x65, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x4d, 0x6f, 0x64,
	0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x52, 0x75, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x1a, 0x3a, 0x0a, 0x0c, 0x45, 0x6e, 0x76,
	0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2b, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x52, 0x50, 0x43,
	0x10, 0x02, 0x22, 0x8c, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x32, 0x0a,
	0x14, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x4f, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x72, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x72, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x53,
	0x65, 0x63, 0x22, 0x51, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x70, 0x75, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x4d, 0x42,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e,
	0x4d, 0x42, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x49, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x63, 0x70, 0x75, 0x49, 0x6e, 0x43, 0x6f, 0x72, 0x65,
	0x22, 0x81, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x52, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x54,
	0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x42, 0x4f, 0x52, 0x54,
	0x45, 0x44, 0x10, 0x05, 0x22, 0xc5, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x1a, 0x44, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc1, 0x02, 0x0a,
	0x0b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3a, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x91, 0x01, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45,
	0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x57, 0x4f, 0x52, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52,
	0x45, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f,
	0x55, 0x54, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45,
	0x44, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x09,
	0x22, 0x44, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x22,
	0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xca, 0x01, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x3f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4e,
	0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x45, 0x41, 0x4c,
	0x54, 0x48, 0x59, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x48, 0x45, 0x41, 0x4c, 0x54,
	0x48, 0x59, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45,
	0x44, 0x10, 0x03, 0x22, 0x43, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x22, 0xd1, 0x02, 0x0a, 0x0c, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x3a, 0x0a,
	0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x73, 0x1a, 0x4c, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x4a, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd2, 0x02, 0x0a,
	0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x70, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x70, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x4b, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x4f, 0x4d, 0x5f, 0x4b, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10,
	0x04, 0x22, 0xae, 0x01, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x1a, 0x48, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xd5, 0x01, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x31, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x54, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x61, 0x67, 0x73, 0x1a, 0x3f, 0x0a, 0x11, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4b, 0x0a, 0x0d, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x48, 0x0a, 0x0a, 0x43, 0x50, 0x55, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x22, 0x4c, 0x0a, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0x80, 0x01, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x4d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x78, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0xdd, 0x02, 0x0a, 0x12, 0x4b, 0x69, 0x6e, 0x74, 0x6f, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x09, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x34, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x63, 0x70, 0x75, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43,
	0x50, 0x55, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x63, 0x70, 0x75, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x43,
	0x0a, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x75, 0x74,
	0x6f, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x12, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x11, 0x6a, 0x6f, 0x62, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x11, 0x6a, 0x6f, 0x62, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x1a, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x84,
	0x02, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x37, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3f, 0x0a, 0x11, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc0, 0x01, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x60, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50,
	0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x55, 0x54, 0x48, 0x45,
	0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x49,
	0x45, 0x57, 0x45, 0x52, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x44, 0x49, 0x54, 0x4f, 0x52,
	0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x05, 0x12, 0x09, 0x0a,
	0x05, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x06, 0x22, 0xa5, 0x01, 0x0a, 0x11, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x40,
	0x0a, 0x1b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x1b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x22, 0x8a, 0x02, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x65, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x0e, 0x0a,
	0x0a, 0x4f, 0x4f, 0x4d, 0x5f, 0x4b, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x22, 0x4b, 0x0a,
	0x13, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x69, 0x6e, 0x74, 0x6f, 0x68, 0x75,
	0x62, 0x2f, 0x6b, 0x69, 0x6e, 0x74, 0x6f, 0x2d, 0x63, 0x6c, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_kkc_models_proto_rawDescOnce sync.Once
	file_kkc_models_proto_rawDescData = file_kkc_models_proto_rawDesc
)

func file_kkc_models_proto_rawDescGZIP() []byte {
	file_kkc_models_proto_rawDescOnce.Do(func() {
		file_kkc_models_proto_rawDescData = protoimpl.X.CompressGZIP(file_kkc_models_proto_rawDescData)
	})
	return file_kkc_models_proto_rawDescData
}

var file_kkc_models_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_kkc_models_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_kkc_models_proto_goTypes = []interface{}{
	(Block_Type)(0),             // 0: Block.Type
	(BuildConfig_Language)(0),   // 1: BuildConfig.Language
	(RunConfig_Protocol)(0),     // 2: RunConfig.Protocol
	(Status_State)(0),           // 3: Status.State
	(BuildStatus_State)(0),      // 4: BuildStatus.State
	(BlockStatus_State)(0),      // 5: BlockStatus.State
	(BlockInstance_State)(0),    // 6: BlockInstance.State
	(AccessPermission_Role)(0),  // 7: AccessPermission.Role
	(JobStatus_State)(0),        // 8: JobStatus.State
	(*Environment)(nil),         // 9: Environment
	(*Blocks)(nil),              // 10: Blocks
	(*Block)(nil),               // 11: Block
	(*Release)(nil),             // 12: Release
	(*BuildConfig)(nil),         // 13: BuildConfig
	(*RunConfig)(nil),           // 14: RunConfig
	(*Repository)(nil),          // 15: Repository
	(*JobSpec)(nil),             // 16: JobSpec
	(*AutoScaling)(nil),         // 17: AutoScaling
	(*Resources)(nil),           // 18: Resources
	(*Status)(nil),              // 19: Status
	(*ReleasesStatus)(nil),      // 20: ReleasesStatus
	(*BuildStatus)(nil),         // 21: BuildStatus
	(*ConsoleLog)(nil),          // 22: ConsoleLog
	(*BlockStatus)(nil),         // 23: BlockStatus
	(*BlockStatuses)(nil),       // 24: BlockStatuses
	(*BlockMetrics)(nil),        // 25: BlockMetrics
	(*BlockInstance)(nil),       // 26: BlockInstance
	(*BlockStorage)(nil),        // 27: BlockStorage
	(*BlocksMetrics)(nil),       // 28: BlocksMetrics
	(*Language)(nil),            // 29: Language
	(*MemoryOptions)(nil),       // 30: MemoryOptions
	(*CPUOptions)(nil),          // 31: CPUOptions
	(*TimeoutOptions)(nil),      // 32: TimeoutOptions
	(*AutoScalingOptions)(nil),  // 33: AutoScalingOptions
	(*KintoConfiguration)(nil),  // 34: KintoConfiguration
	(*Logs)(nil),                // 35: Logs
	(*AccessTokenData)(nil),     // 36: AccessTokenData
	(*AccessPermission)(nil),    // 37: AccessPermission
	(*ClusterSecretData)(nil),   // 38: ClusterSecretData
	(*JobStatus)(nil),           // 39: JobStatus
	(*TeleportServiceData)(nil), // 40: TeleportServiceData
	nil,                         // 41: Block.ReleasesEntry
	nil,                         // 42: BuildConfig.BuildArgsEntry
	nil,                         // 43: RunConfig.EnvVarsEntry
	nil,                         // 44: ReleasesStatus.ReleasesEntry
	nil,                         // 45: BlockMetrics.InstancesEntry
	nil,                         // 46: BlockMetrics.StoragesEntry
	nil,                         // 47: BlocksMetrics.BlocksEntry
	nil,                         // 48: Language.VersionsTagsEntry
	nil,                         // 49: AccessTokenData.MetadataEntry
	(*timestamp.Timestamp)(nil), // 50: google.protobuf.Timestamp
}
var file_kkc_models_proto_depIdxs = []int32{
	11, // 0: Blocks.items:type_name -> Block
	41, // 1: Block.releases:type_name -> Block.ReleasesEntry
	50, // 2: Release.createdAt:type_name -> google.protobuf.Timestamp
	13, // 3: Release.buildConfig:type_name -> BuildConfig
	14, // 4: Release.runConfig:type_name -> RunConfig
	19, // 5: Release.status:type_name -> Status
	1,  // 6: BuildConfig.language:type_name -> BuildConfig.Language
	42, // 7: BuildConfig.buildArgs:type_name -> BuildConfig.BuildArgsEntry
	15, // 8: BuildConfig.repository:type_name -> Repository
	0,  // 9: RunConfig.type:type_name -> Block.Type
	17, // 10: RunConfig.autoScaling:type_name -> AutoScaling
	43, // 11: RunConfig.envVars:type_name -> RunConfig.EnvVarsEntry
	18, // 12: RunConfig.resources:type_name -> Resources
	16, // 13: RunConfig.jobSpec:type_name -> JobSpec
	2,  // 14: RunConfig.protocol:type_name -> RunConfig.Protocol
	3,  // 15: Status.state:type_name -> Status.State
	44, // 16: ReleasesStatus.releases:type_name -> ReleasesStatus.ReleasesEntry
	4,  // 17: BuildStatus.state:type_name -> BuildStatus.State
	50, // 18: BuildStatus.startTime:type_name -> google.protobuf.Timestamp
	50, // 19: BuildStatus.finishTime:type_name -> google.protobuf.Timestamp
	5,  // 20: BlockStatus.state:type_name -> BlockStatus.State
	23, // 21: BlockStatuses.blockStatuses:type_name -> BlockStatus
	45, // 22: BlockMetrics.instances:type_name -> BlockMetrics.InstancesEntry
	46, // 23: BlockMetrics.storages:type_name -> BlockMetrics.StoragesEntry
	6,  // 24: BlockInstance.state:type_name -> BlockInstance.State
	47, // 25: BlocksMetrics.blocks:type_name -> BlocksMetrics.BlocksEntry
	1,  // 26: Language.language:type_name -> BuildConfig.Language
	48, // 27: Language.versionsTags:type_name -> Language.VersionsTagsEntry
	29, // 28: KintoConfiguration.languages:type_name -> Language
	30, // 29: KintoConfiguration.memoryOptions:type_name -> MemoryOptions
	31, // 30: KintoConfiguration.cpuOptions:type_name -> CPUOptions
	32, // 31: KintoConfiguration.timeoutOptions:type_name -> TimeoutOptions
	33, // 32: KintoConfiguration.autoScalingOptions:type_name -> AutoScalingOptions
	32, // 33: KintoConfiguration.jobTimeoutOptions:type_name -> TimeoutOptions
	37, // 34: AccessTokenData.clusterAccess:type_name -> AccessPermission
	37, // 35: AccessTokenData.environmentAccess:type_name -> AccessPermission
	49, // 36: AccessTokenData.metadata:type_name -> AccessTokenData.MetadataEntry
	7,  // 37: AccessPermission.role:type_name -> AccessPermission.Role
	8,  // 38: JobStatus.state:type_name -> JobStatus.State
	12, // 39: Block.ReleasesEntry.value:type_name -> Release
	19, // 40: ReleasesStatus.ReleasesEntry.value:type_name -> Status
	26, // 41: BlockMetrics.InstancesEntry.value:type_name -> BlockInstance
	27, // 42: BlockMetrics.StoragesEntry.value:type_name -> BlockStorage
	25, // 43: BlocksMetrics.BlocksEntry.value:type_name -> BlockMetrics
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_kkc_models_proto_init() }
func file_kkc_models_proto_init() {
	if File_kkc_models_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kkc_models_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Environment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Release); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Repository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScaling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleasesStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsoleLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockStatuses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlocksMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Language); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeoutOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoScalingOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KintoConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Logs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessTokenData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterSecretData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kkc_models_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeleportServiceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kkc_models_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kkc_models_proto_goTypes,
		DependencyIndexes: file_kkc_models_proto_depIdxs,
		EnumInfos:         file_kkc_models_proto_enumTypes,
		MessageInfos:      file_kkc_models_proto_msgTypes,
	}.Build()
	File_kkc_models_proto = out.File
	file_kkc_models_proto_rawDesc = nil
	file_kkc_models_proto_goTypes = nil
	file_kkc_models_proto_depIdxs = nil
}
